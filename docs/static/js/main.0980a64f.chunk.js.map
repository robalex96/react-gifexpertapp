{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","gif","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GAAWF,EAAcE,EAAMQ,OAAOF,YCJxDG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC4EO,UAAUF,GADtF,sBAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QARvB,kBAWZY,GAXY,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDX,SAAAA,GAAa,IAAD,EACVpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAgBpC,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAX,GACFS,EAAS,CACLV,KAAMC,EACNO,SAAS,SAGtB,CAACd,IAEGe,EDdsBI,CAAanB,GAA9BO,EADuB,EAC5BD,KAAWQ,EADiB,EACjBA,QAElB,OACI,kBAAC,WAAD,KACI,wBAAIlB,UAAU,qCAAqCI,GAClDc,GAAW,yCACZ,yBAAKlB,UAAU,aAEPW,EAAKC,KAAI,SAAAC,GAAG,OAER,kBAAC,EAAD,eACIW,IAAKX,EAAIC,IACLD,UEbnBY,EAAe,WAAO,IAAD,EACMzC,mBAAS,IADf,mBACvBQ,EADuB,KACXT,EADW,KAG9B,OACI,kBAAC,WAAD,KACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEIS,EAAWoB,KAAI,SAACR,GAAD,OACX,kBAAC,EAAD,CACIoB,IAAKpB,EACLA,SAAUA,S,MCXlCsB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.0980a64f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (event) => {setInputValue(event.target.value)};\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(inputValue.trim().length > 0){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=2FdZt762GnIcjVmaNkZ3HtqsWXpRUhds&q=${encodeURI(category)}&limit=10`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React, { Fragment } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {    \r\n    const {data:gifs, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    gifs.map(gif =>\r\n                        (\r\n                        <GifGridItem \r\n                            key={gif.id}\r\n                            {...gif}\r\n                        />\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = category => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            {\r\n                categories.map((category) =>  \r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}